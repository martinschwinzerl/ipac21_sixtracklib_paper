@misc{sixtracklib-repo-2021,
  title = {{{SixTrackLib}} {{GitHub}} Repository},
  shorttitle = {Library for Single Charged Particle Simulations in Accelerators},
  url = {https://github.com/SixTrack/sixtracklib}
}

@article{demaria-sixtrack-2019,
  title = {{{SixTrack V}} and Runtime Environment},
  author = {De Maria, R. and Andersson, J. and Berglyd Olsen, V. K. and Field, L. and Giovannozzi, M. and Hermes, P. D. and Høimyr, N. and Kostoglou, S. and Iadarola, G. and Mcintosh, E. and Mereghetti, A. and Molson, J. and Pellegrini, D. and Persson, T. and Schwinzerl, M. and Maclean, E. H. and Sjobak, K. N. and Zacharov, I. and Singh, S.},
  date = {2019-12-30},
  journaltitle = {International Journal of Modern Physics A},
  shortjournal = {Int. J. Mod. Phys. A},
  volume = {34},
  pages = {1942035},
  publisher = {{World Scientific Publishing Co.}},
  issn = {0217-751X},
  doi = {10.1142/S0217751X19420351},
  abstract = {SixTrack is a single-particle tracking code for high-energy circular accelerators routinely used at CERN for the Large Hadron Collider (LHC), its luminosity upgrade (HL-LHC), the Future Circular Collider (FCC) and the Super Proton Synchrotron (SPS) simulations. The code is based on a 6D symplectic tracking engine, which is optimized for long-term tracking simulations and delivers fully reproducible results on several platforms. It also includes multiple scattering engines for beam–matter interaction studies, as well as facilities to run the integrated simulations with external particle matter interaction codes. These features differentiate SixTrack from general-purpose, optics-design software. The code recently underwent a major restructuring to merge the advanced features into a single branch, such as multiple ion species, interface with external codes and high-performance input/output. This restructuring also removed a large number of compilation flags, instead enabling/disabling the functionality with runtime options. In the process, the code was moved from Fortran 77 to Fortran 2018 standard, also allowing and achieving a better modularization. Physics models (beam–beam effects, Radio-Frequency (RF) multipoles, current carrying wires, solenoid and electron lenses) and methods (symplecticity check) have also been reviewed and refined to offer more accurate results. The SixDesk runtime environment allows the user to manage the large batches of simulations required for accurate predictions of the dynamic aperture. SixDesk supports several cluster environments available at CERN as well as submitting jobs to the LHC@Home volunteering computing project, which enables volunteers contributing with their hardware to CERN simulation. SixTrackLib is a new library aimed at providing a portable and flexible tracking engine for single- and multi-particle problems using the models and formalism of SixTrack. The library is able to run in CPUs as well as graphical processing units (GPUs). This contribution presents the status of the code, summarizes the main existing features and provides details about the main development lines SixTrack, SixDesk and SixTrackLib.},
  number = {36}
}

@misc{sixtrack-repo-2021,
  title = {{{SixTrack}} {{GitHub}} Repository},
  url = {https://github.com/SixTrack/SixTrack},
  abstract = {SixTrack – 6D Tracking Code. Contribute to SixTrack/SixTrack development by creating an account on GitHub.}
}

@misc{cobjects-repo-2021,
  title = {{{cobjects}} {{GitHub} {Repository}}},
  url = {https://github.com/SixTrack/cobjects}
}

@misc{data-repo-2021,
  title = {{{IPAC21}}' {{SixTrackLib Complementary Repository}}},
  shorttitle = {Ipac21\_sixtracklib},
  url = {https://github.com/martinschwinzerl/ipac21_sixtracklib},
  abstract = {Github repository containing information about the presented hardware systems and the raw data for the performance analysis plots.}
}



@article{nickolls-cuda-2008,
  title = {Scalable {{Parallel Programming}} with {{CUDA}}},
  author = {Nickolls, J. and Buck, I. and Garland, M. and Skadron, K.},
  date = {2008-03-01},
  journaltitle = {Queue},
  volume = {6},
  pages = {40--53},
  issn = {1542-7730},
  doi = {10.1145/1365490.1365500},
  number = {2}
}

@misc{oeftiger-spacecharge-2021,
  title = {Simulation Study of the Space Charge Limit for the {{FAIR Heavy}}-{{Ion Synchrotron SIS100}}},
  author = {Oeftiger, A. and N, N. and N, N. and N, N.},
  date = {2021},
  publisher = {{to be published}}
}

@article{paraschou-iadarola-ecloud-2020,
  title = {Incoherent Electron Cloud Effects in the {{Large Hadron Collider}}},
  author = {Paraschou, K. and Iadarola, G.},
  date = {2020-12-16},
  journaltitle = {CERN Yellow Reports: Conference Proceedings},
  shortjournal = {CYR Conf. Proc.},
  volume = {9},
  pages = {249--249},
  issn = {2519-8092},
  doi = {10.23732/CYRCP-2020-009.249},
  langid = {english}
}

@inproceedings{perssonMADXFutureColliders2021,
  title = {{{MAD}}-{{X For Future Colliders}}},
  booktitle = {To Be Published},
  author = {Persson, T. and Deniau, L. and Latina, A. and Burkhardt, H. and Skowronski, P.},
  date = {2021-05},
  location = {{Campinas, SP, Brazil}},
  abstract = {The feasibility and performance of the future accelerators must, to a large extent, be predicted by simulation codes. This implies that simulation codes need to include effects that previously played a minor role. For example, in large electron machines like the FCC-ee the large energy variation along the ring requires that the magnets strength is adjusted to the beam energy at that location, normally referred to as tapering. In this article, we present new features implemented in the MAD-X code to enable and facilitate simulations of future colliders.},
  eventtitle = {12th {{International Particle}} Celerator {{Conference}} ({{IPAC}}'21)}
}

@misc{pyheadtail-repo-2021,
  title = {{{PyCOMPLETE}}/{{PyHEADTAIL}} {{GitHub}} Repository},
  url = {https://github.com/PyCOMPLETE/PyHEADTAIL},
  abstract = {CERN PyHEADTAIL numerical n-body simulation code for simulating macro-particle beam dynamics with collective effects},
}

@article{stone-opencl-2010,
  title = {{{OpenCL}}: {{A Parallel Programming Standard}} for {{Heterogeneous Computing Systems}}},
  shorttitle = {{{OpenCL}}},
  author = {Stone, J. E. and Gohara, D. and Shi. G},
  date = {2010-05},
  journaltitle = {Computing in science \& engineering},
  shortjournal = {Comput Sci Eng},
  volume = {12},
  pages = {66--72},
  issn = {1521-9615},
  doi = {10.1109/MCSE.2010.69},
  abstract = {We provide an overview of the key architectural features of recent microprocessor designs and describe the programming model and abstractions provided by OpenCL, a new parallel programming standard targeting these architectures.},
  eprint = {21037981},
  eprinttype = {pmid},
  number = {3},
  pmcid = {PMC2964860}
}

